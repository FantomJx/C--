{
	"Initialize BST": {
    "prefix": "bst_init",
    "body": [
        "struct Node {",
        "    int value;",
        "    struct Node* left;",
        "    struct Node* right;",
        "}typedef Node;"
    ],
  },
  "Initialize deleteNode": {
    "prefix" : "delete_copy",
    "body": [
        "Node* findMinValueNode(Node* node) {",
        "    Node* current = node;",
        "    while (current && current->left != NULL) {",
        "        current = current->left;",
        "    }",
        "    return current;",
        "}",
        "",
        "Node* deleteNode(Node* root, int key) {",
        "    if (root == NULL) {",
        "        return root;",
        "    }",
        "",
        "    if (key < root->value) {",
        "        root->left = deleteNode(root->left, key);",
        "    } else if (key > root->value) {",
        "        root->right = deleteNode(root->right, key);",
        "    } else {",
        "",
        "        if (root->left == NULL && root->right == NULL) {",
        "            free(root);",
        "            return NULL;",
        "        }",
        "",
        "        else if (root->left == NULL) {",
        "            Node* temp = root->right;",
        "            free(root);",
        "            return temp;",
        "        } else if (root->right == NULL) {",
        "            Node* temp = root->left;",
        "            free(root);",
        "            return temp;",
        "        }",
        "",
        "        else {",
        "            Node* successor = findMinValueNode(root->right);",
        "            root->value = successor->value;",
        "            root->right = deleteNode(root->right, successor->value);",
        "        }",
        "    }",
        "    return root;",
        "}"
    ],
  }
}